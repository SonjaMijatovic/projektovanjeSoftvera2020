{"ast":null,"code":"import moment from \"moment\";\nimport strings from '../localization';\nexport function getYears(plusYears = 0) {\n  let result = [];\n  let currentYear = new Date().getFullYear();\n  currentYear += plusYears;\n\n  for (let i = currentYear; i >= currentYear - 99; i--) {\n    result.push({\n      name: i,\n      value: i\n    });\n  }\n\n  return result;\n}\nexport function getMonths() {\n  return [{\n    id: 1,\n    value: strings.months.jan\n  }, {\n    id: 2,\n    value: strings.months.feb\n  }, {\n    id: 3,\n    value: strings.months.mar\n  }, {\n    id: 4,\n    value: strings.months.apr\n  }, {\n    id: 5,\n    value: strings.months.may\n  }, {\n    id: 6,\n    value: strings.months.jun\n  }, {\n    id: 7,\n    value: strings.months.jul\n  }, {\n    id: 8,\n    value: strings.months.aug\n  }, {\n    id: 9,\n    value: strings.months.sep\n  }, {\n    id: 10,\n    value: strings.months.oct\n  }, {\n    id: 11,\n    value: strings.months.nov\n  }, {\n    id: 12,\n    value: strings.months.dec\n  }];\n}\nexport function leapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function stringToDate(date, format = 'DD-MM-YYYY') {\n  return moment(date, format);\n}\nexport function dateToString(date, format = 'DD-MM-YYYY') {\n  return moment(date).format(format);\n}\nexport function dateToStringDatePickerFormat(date, format = 'MM/DD/YYYY') {\n  return moment(date).format(format);\n}\nexport function dateTimeToString(date, format = 'DD-MM-YYYY HH:MM') {\n  return moment(date).format(format);\n}","map":{"version":3,"sources":["/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/util/DateUtil.js"],"names":["moment","strings","getYears","plusYears","result","currentYear","Date","getFullYear","i","push","name","value","getMonths","id","months","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","leapYear","year","stringToDate","date","format","dateToString","dateToStringDatePickerFormat","dateTimeToString"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport strings from '../localization';\n\nexport function getYears(plusYears = 0) {\n\n    let result = [];\n    let currentYear = (new Date()).getFullYear();\n\n    currentYear += plusYears;\n\n    for(let i = currentYear; i >= currentYear - 99; i--) {\n\n        result.push({\n            name: i,\n            value: i\n        });\n    }\n\n    return result;\n}\n\nexport function getMonths(){\n\n    return [\n        {id: 1, value: strings.months.jan},\n        {id: 2, value: strings.months.feb},\n        {id: 3, value: strings.months.mar},\n        {id: 4, value: strings.months.apr},\n        {id: 5, value: strings.months.may},\n        {id: 6, value: strings.months.jun},\n        {id: 7, value: strings.months.jul},\n        {id: 8, value: strings.months.aug},\n        {id: 9, value: strings.months.sep},\n        {id: 10, value: strings.months.oct},\n        {id: 11, value: strings.months.nov},\n        {id: 12, value: strings.months.dec},\n    ];\n}\n\nexport function leapYear(year)\n{\n    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nexport function stringToDate(date, format = 'DD-MM-YYYY') {\n    return moment(date, format);\n}\n\nexport function dateToString(date, format = 'DD-MM-YYYY') {\n    return moment(date).format(format);\n}\n\nexport function dateToStringDatePickerFormat(date, format = 'MM/DD/YYYY') {\n    return moment(date).format(format);\n}\n\nexport function dateTimeToString(date, format = 'DD-MM-YYYY HH:MM') {\n    return moment(date).format(format);\n}"]},"metadata":{},"sourceType":"module"}