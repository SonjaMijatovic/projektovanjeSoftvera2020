{"ast":null,"code":"var _jsxFileName = \"/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/pages/admin/doctoreType/DoctorTypeList.js\";\nimport React from 'react';\nimport TablePage from \"../../../common/TablePage\";\nimport { deleteUser, getUsers } from \"../../../services/admin/UserAdminService\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../../localization\";\nimport { withSnackbar } from \"notistack\";\nimport { ListItemIcon, ListItemText, Menu, MenuItem, TableCell } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddDoctorType from './AddDoctorType';\nimport { getDoctorTypes } from '../../../services/DoctorTypeService';\n\nclass DoctorTypeList extends TablePage {\n  constructor(props) {\n    super(props);\n    this.tableDescription = [{\n      key: 'name',\n      label: strings.doctorTypeList.name\n    }];\n  }\n\n  fetchData() {\n    this.setState({\n      lockTable: true\n    });\n    getDoctorTypes({\n      page: this.state.searchData.page,\n      perPage: this.state.searchData.perPage,\n      search: this.state.searchData.search.toLowerCase()\n    }).then(response => {\n      if (!response.ok) {\n        return;\n      }\n\n      this.setState({\n        tableData: response.data.entities,\n        total: response.data.total,\n        lockTable: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getPageHeader() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }, strings.doctorTypeList.doctorTypes);\n  }\n\n  renderAddContent() {\n    return /*#__PURE__*/React.createElement(AddDoctorType, {\n      onCancel: this.onCancel,\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    });\n  }\n\n  delete(item) {\n    this.setState({\n      lockTable: true\n    });\n    deleteUser(item.id).then(response => {\n      if (response && !response.ok) {\n        this.onFinish(null);\n        return;\n      }\n\n      this.props.enqueueSnackbar(strings.userList.userDelete, {\n        variant: 'success'\n      });\n      this.onFinish(item);\n      this.cancelDelete();\n      this.setState({\n        lockTable: false\n      });\n    });\n  }\n\n  renderRowMenu(index, item) {\n    let ariaOwns = 'action-menu-' + index;\n    return /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-owns\": this.state.anchorEl ? ariaOwns : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: event => this.handleMenuClick(event, ariaOwns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MoreVert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    })), ariaOwns === this.state.ariaOwns && /*#__PURE__*/React.createElement(Menu, {\n      id: ariaOwns,\n      anchorEl: this.state.anchorEl,\n      open: Boolean(this.state.anchorEl),\n      onClose: () => this.handleMenuClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, !item[this.deletedField] && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleMenuDelete(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: strings.table.delete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers\n}) {\n  return {\n    menu: menuReducers\n  };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(DoctorTypeList)));","map":{"version":3,"sources":["/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/pages/admin/doctoreType/DoctorTypeList.js"],"names":["React","TablePage","deleteUser","getUsers","bindActionCreators","Actions","withRouter","connect","strings","withSnackbar","ListItemIcon","ListItemText","Menu","MenuItem","TableCell","IconButton","MoreVert","UndoIcon","DeleteIcon","AddDoctorType","getDoctorTypes","DoctorTypeList","constructor","props","tableDescription","key","label","doctorTypeList","name","fetchData","setState","lockTable","page","state","searchData","perPage","search","toLowerCase","then","response","ok","tableData","data","entities","total","componentDidMount","getPageHeader","doctorTypes","renderAddContent","onCancel","onFinish","delete","item","id","enqueueSnackbar","userList","userDelete","variant","cancelDelete","renderRowMenu","index","ariaOwns","anchorEl","undefined","event","handleMenuClick","Boolean","handleMenuClose","deletedField","handleMenuDelete","table","mapDispatchToProps","dispatch","changeFullScreen","mapStateToProps","menuReducers","menu"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TablePage from \"../../../common/TablePage\";\nimport {deleteUser, getUsers,} from \"../../../services/admin/UserAdminService\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../../localization\";\nimport {withSnackbar} from \"notistack\";\nimport {ListItemIcon, ListItemText, Menu, MenuItem, TableCell} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddDoctorType from './AddDoctorType';\nimport { getDoctorTypes } from '../../../services/DoctorTypeService';\n\nclass DoctorTypeList extends TablePage {\n\n    tableDescription = [\n        { key: 'name', label: strings.doctorTypeList.name },\n    ];\n\n    constructor(props) {\n        super(props);\n    }\n\n    fetchData() {\n\n        this.setState({\n            lockTable: true\n        });\n\n        getDoctorTypes({\n            page: this.state.searchData.page,\n            perPage: this.state.searchData.perPage,\n            search: this.state.searchData.search.toLowerCase()\n        }).then(response => {\n\n            if(!response.ok) {\n                return;\n            }\n\n            this.setState({\n                tableData: response.data.entities,\n                total: response.data.total,\n                lockTable: false\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    getPageHeader() {\n        return <h1>{ strings.doctorTypeList.doctorTypes }</h1>;\n    }\n\n    renderAddContent() {\n        return <AddDoctorType onCancel={ this.onCancel } onFinish={ this.onFinish }/>\n    }\n\n    delete(item) {\n\n        this.setState({\n            lockTable: true\n        });\n\n        deleteUser(item.id).then(response => {\n\n            if(response && !response.ok) {\n                this.onFinish(null);\n                return;\n            }\n\n            this.props.enqueueSnackbar(strings.userList.userDelete, { variant: 'success' });\n\n            this.onFinish(item);\n            this.cancelDelete();\n\n            this.setState({\n                lockTable: false\n            });\n        });\n    }\n\n\n    renderRowMenu(index, item) {\n\n        let ariaOwns = 'action-menu-' + index;\n\n        return(\n            <TableCell>\n                <IconButton\n                    aria-owns={ this.state.anchorEl ? ariaOwns : undefined }\n                    aria-haspopup=\"true\"\n                    onClick={ (event) => this.handleMenuClick(event, ariaOwns) }\n                >\n                    <MoreVert/>\n                </IconButton>\n                {\n                    ariaOwns === this.state.ariaOwns &&\n                    <Menu\n                        id={ ariaOwns }\n                        anchorEl={ this.state.anchorEl }\n                        open={ Boolean(this.state.anchorEl) }\n                        onClose={ () => this.handleMenuClose() }\n                    >\n                        {\n                            !item[this.deletedField] &&\n                            <MenuItem onClick={ () => this.handleMenuDelete(item) }>\n                                <ListItemIcon>\n                                    <DeleteIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary={ strings.table.delete }/>\n                            </MenuItem>\n                        }\n\n                    </Menu>\n                }\n\n            </TableCell>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers })\n{\n    return { menu: menuReducers };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(DoctorTypeList)));"]},"metadata":{},"sourceType":"module"}