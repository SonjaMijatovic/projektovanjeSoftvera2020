{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/users/UserList.js\";\nimport React from 'react';\nimport TablePage from \"../../../common/TablePage\";\nimport { deleteUser, getUsers, blockUser, unblockUser } from \"../../../services/admin/UserAdminService\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../../localization\";\nimport AddUser from \"./AddUser\";\nimport { withSnackbar } from \"notistack\";\nimport { ListItemIcon, ListItemText, Menu, MenuItem, TableCell } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { getDoctorTypes } from '../../../services/DoctorTypeService';\n\nclass UserList extends TablePage {\n  renderDoctorType(item) {\n    if (!item) {\n      return '';\n    }\n\n    return item.name;\n  }\n\n  constructor(props) {\n    super(props);\n    this.tableDescription = [{\n      key: 'email',\n      label: strings.userList.email\n    }, {\n      key: 'firstName',\n      label: strings.userList.firstName\n    }, {\n      key: 'lastName',\n      label: strings.userList.lastName\n    }, {\n      key: 'userType',\n      label: \"User type\"\n    }, {\n      key: 'doctorType',\n      label: \"Doctor Type\",\n      transform: 'renderDoctorType'\n    }, {\n      key: 'blocked',\n      label: \"Blocked\",\n      transform: 'renderColumnDeleted'\n    }];\n    this.state.doctoreTypes = [];\n  }\n\n  fetchData() {\n    this.setState({\n      lockTable: true\n    });\n    getUsers({\n      page: this.state.searchData.page,\n      perPage: this.state.searchData.perPage,\n      search: this.state.searchData.search.toLowerCase()\n    }).then(response => {\n      if (!response.ok) {\n        return;\n      }\n\n      this.setState({\n        tableData: response.data.entities,\n        total: response.data.total,\n        lockTable: false\n      });\n    });\n    getDoctorTypes({\n      page: this.state.searchData.page,\n      perPage: this.state.searchData.perPage,\n      search: this.state.searchData.search.toLowerCase()\n    }).then(response => {\n      if (!response.ok) {\n        return;\n      }\n\n      this.setState({\n        doctoreTypes: response.data.entities ? response.data.entities : []\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getPageHeader() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 16\n      }\n    }, strings.userList.pageTitle);\n  }\n\n  renderAddContent() {\n    return /*#__PURE__*/React.createElement(AddUser, {\n      doctoreTypes: this.state.doctoreTypes,\n      onCancel: this.onCancel,\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }\n    });\n  }\n\n  delete(item) {\n    this.setState({\n      lockTable: true\n    });\n    deleteUser(item.id).then(response => {\n      if (response && !response.ok) {\n        this.onFinish(null);\n        return;\n      }\n\n      this.props.enqueueSnackbar(strings.userList.userDelete, {\n        variant: 'success'\n      });\n      this.onFinish(item);\n      this.cancelDelete();\n      this.setState({\n        lockTable: false\n      });\n    });\n  }\n\n  handleUnblock(item) {\n    unblockUser(item.id).then(response => {\n      this.fetchData();\n    });\n  }\n\n  handleBlock(item) {\n    blockUser(item.id).then(response => {\n      this.fetchData();\n    });\n  }\n\n  renderRowMenu(index, item) {\n    let ariaOwns = 'action-menu-' + index;\n    return /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-owns\": this.state.anchorEl ? ariaOwns : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: event => this.handleMenuClick(event, ariaOwns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MoreVert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    })), ariaOwns === this.state.ariaOwns && /*#__PURE__*/React.createElement(Menu, {\n      id: ariaOwns,\n      anchorEl: this.state.anchorEl,\n      open: Boolean(this.state.anchorEl),\n      onClose: () => this.handleMenuClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, item.blocked && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleUnblock(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: \"Unblock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    })), !item.blocked && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleBlock(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: \"Block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers\n}) {\n  return {\n    menu: menuReducers\n  };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(UserList)));","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/users/UserList.js"],"names":["React","TablePage","deleteUser","getUsers","blockUser","unblockUser","bindActionCreators","Actions","withRouter","connect","strings","AddUser","withSnackbar","ListItemIcon","ListItemText","Menu","MenuItem","TableCell","IconButton","MoreVert","UndoIcon","DeleteIcon","getDoctorTypes","UserList","renderDoctorType","item","name","constructor","props","tableDescription","key","label","userList","email","firstName","lastName","transform","state","doctoreTypes","fetchData","setState","lockTable","page","searchData","perPage","search","toLowerCase","then","response","ok","tableData","data","entities","total","componentDidMount","getPageHeader","pageTitle","renderAddContent","onCancel","onFinish","delete","id","enqueueSnackbar","userDelete","variant","cancelDelete","handleUnblock","handleBlock","renderRowMenu","index","ariaOwns","anchorEl","undefined","event","handleMenuClick","Boolean","handleMenuClose","blocked","mapDispatchToProps","dispatch","changeFullScreen","mapStateToProps","menuReducers","menu"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TablePage from \"../../../common/TablePage\";\nimport {deleteUser, getUsers, blockUser, unblockUser} from \"../../../services/admin/UserAdminService\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../../localization\";\nimport AddUser from \"./AddUser\";\nimport {withSnackbar} from \"notistack\";\nimport {ListItemIcon, ListItemText, Menu, MenuItem, TableCell} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { getDoctorTypes } from '../../../services/DoctorTypeService';\n\n\nclass UserList extends TablePage {\n\n    tableDescription = [\n        { key: 'email', label: strings.userList.email },\n        { key: 'firstName', label: strings.userList.firstName },\n        { key: 'lastName', label: strings.userList.lastName },\n        { key: 'userType', label: \"User type\" },\n        { key: 'doctorType', label: \"Doctor Type\", transform: 'renderDoctorType' },\n        { key: 'blocked', label: \"Blocked\", transform: 'renderColumnDeleted' }\n    ];\n\n    renderDoctorType(item) {\n        if(!item) {\n            return '';\n        }\n\n        return item.name\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state.doctoreTypes = [];\n    }\n\n    fetchData() {\n\n        this.setState({\n            lockTable: true\n        });\n\n        getUsers({\n            page: this.state.searchData.page,\n            perPage: this.state.searchData.perPage,\n            search: this.state.searchData.search.toLowerCase()\n        }).then(response => {\n\n            if(!response.ok) {\n                return;\n            }\n\n            this.setState({\n                tableData: response.data.entities,\n                total: response.data.total,\n                lockTable: false\n            });\n        });\n\n        getDoctorTypes({\n            page: this.state.searchData.page,\n            perPage: this.state.searchData.perPage,\n            search: this.state.searchData.search.toLowerCase()\n        }).then(response => {\n\n            if(!response.ok) {\n                return;\n            }\n\n            this.setState({\n                doctoreTypes: response.data.entities ? response.data.entities : [],\n                \n            });\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    getPageHeader() {\n        return <h1>{ strings.userList.pageTitle }</h1>;\n    }\n\n    renderAddContent() {\n        return <AddUser doctoreTypes={ this.state.doctoreTypes } onCancel={ this.onCancel } onFinish={ this.onFinish }/>\n    }\n\n    delete(item) {\n\n        this.setState({\n            lockTable: true\n        });\n\n        deleteUser(item.id).then(response => {\n\n            if(response && !response.ok) {\n                this.onFinish(null);\n                return;\n            }\n\n            this.props.enqueueSnackbar(strings.userList.userDelete, { variant: 'success' });\n\n            this.onFinish(item);\n            this.cancelDelete();\n\n            this.setState({\n                lockTable: false\n            });\n        });\n    }\n\n    handleUnblock(item) {\n        unblockUser(item.id).then(response => {\n            this.fetchData();\n        })\n    }\n\n    handleBlock(item) {\n        blockUser(item.id).then(response => {\n            this.fetchData();\n        });\n    }\n\n    renderRowMenu(index, item) {\n\n        let ariaOwns = 'action-menu-' + index;\n\n        return(\n            <TableCell>\n                <IconButton\n                    aria-owns={ this.state.anchorEl ? ariaOwns : undefined }\n                    aria-haspopup=\"true\"\n                    onClick={ (event) => this.handleMenuClick(event, ariaOwns) }\n                >\n                    <MoreVert/>\n                </IconButton>\n                {\n                    ariaOwns === this.state.ariaOwns &&\n                    <Menu\n                        id={ ariaOwns }\n                        anchorEl={ this.state.anchorEl }\n                        open={ Boolean(this.state.anchorEl) }\n                        onClose={ () => this.handleMenuClose() }\n                    >\n\n                        {\n                            item.blocked &&\n                            <MenuItem onClick={ () => this.handleUnblock(item) }>\n                                <ListItemIcon>\n                                    <UndoIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Unblock\"/>\n                            </MenuItem>\n                        }\n\n{\n                            !item.blocked &&\n                            <MenuItem onClick={ () => this.handleBlock(item) }>\n                                <ListItemIcon>\n                                    <UndoIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Block\"/>\n                            </MenuItem>\n                        }\n\n                    </Menu>\n                }\n\n            </TableCell>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers })\n{\n    return { menu: menuReducers };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(UserList)));"]},"metadata":{},"sourceType":"module"}