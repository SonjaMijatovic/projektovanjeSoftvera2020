{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/components/forms/admin/user/UserForm.js\";\nimport React from 'react';\nimport strings from \"../../../../localization\";\nimport { getError, hasError } from \"../../../../functions/Validation\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport SelectControl from '../../../controls/SelectControl';\nimport getUserTypes from '../../../../constants/UserType';\n\nconst UserForm = ({\n  onSubmit,\n  onCancel,\n  onChange,\n  errors,\n  data\n}) => /*#__PURE__*/React.createElement(\"form\", {\n  id: \"user-form\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  label: strings.userForm.email,\n  error: hasError(errors, 'email'),\n  helperText: getError(errors, 'email'),\n  fullWidth: true,\n  autoFocus: true,\n  name: \"email\",\n  onChange: onChange,\n  margin: \"normal\",\n  value: data.email,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  label: strings.userForm.password,\n  error: hasError(errors, 'password'),\n  helperText: getError(errors, 'password'),\n  fullWidth: true,\n  name: \"password\",\n  type: \"password\",\n  onChange: onChange,\n  margin: \"normal\",\n  value: data.passwor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  label: strings.userForm.firstName,\n  error: hasError(errors, 'firstName'),\n  helperText: getError(errors, 'firstName'),\n  fullWidth: true,\n  autoFocus: true,\n  name: \"firstName\",\n  onChange: onChange,\n  margin: \"normal\",\n  value: data.firstName,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  label: strings.userForm.lastName,\n  error: hasError(errors, 'lastName'),\n  helperText: getError(errors, 'lastName'),\n  fullWidth: true,\n  autoFocus: true,\n  name: \"lastName\",\n  onChange: onChange,\n  margin: \"normal\",\n  value: data.lastName,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(SelectControl, {\n  hasError: hasError(errors, 'userType'),\n  error: getError(errors, 'userType'),\n  options: getUserTypes(),\n  selected: data.userType,\n  onChange: onChange,\n  label: 'User type',\n  name: 'userType',\n  nameKey: 'name',\n  valueKey: 'value',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"submit-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  variant: \"contained\",\n  color: \"primary\",\n  onClick: onSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }\n}, strings.userForm.ok), /*#__PURE__*/React.createElement(Button, {\n  variant: \"contained\",\n  color: \"secondary\",\n  onClick: onCancel,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }\n}, strings.userForm.cancel)));\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/components/forms/admin/user/UserForm.js"],"names":["React","strings","getError","hasError","Button","TextField","SelectControl","getUserTypes","UserForm","onSubmit","onCancel","onChange","errors","data","userForm","email","password","passwor","firstName","lastName","userType","ok","cancel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport strings from \"../../../../localization\";\nimport {getError, hasError} from \"../../../../functions/Validation\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport SelectControl from '../../../controls/SelectControl';\nimport getUserTypes from '../../../../constants/UserType';\nconst UserForm = ({\n                      onSubmit,\n                      onCancel,\n                      onChange,\n                      errors,\n                      data\n                  }) => (\n\n    <form id='user-form'>\n        <TextField\n            label={ strings.userForm.email }\n            error={ hasError(errors, 'email') }\n            helperText={ getError(errors, 'email') }\n            fullWidth\n            autoFocus\n            name='email'\n            onChange={ onChange }\n            margin=\"normal\"\n            value={ data.email }\n        />\n        <TextField\n            label={ strings.userForm.password }\n            error={ hasError(errors, 'password') }\n            helperText={ getError(errors, 'password') }\n            fullWidth\n            name='password'\n            type=\"password\"\n            onChange={ onChange }\n            margin=\"normal\"\n            value={ data.passwor }\n        />\n        <TextField\n            label={ strings.userForm.firstName }\n            error={ hasError(errors, 'firstName') }\n            helperText={ getError(errors, 'firstName') }\n            fullWidth\n            autoFocus\n            name='firstName'\n            onChange={ onChange }\n            margin=\"normal\"\n            value={ data.firstName }\n        />\n        <TextField\n            label={ strings.userForm.lastName }\n            error={ hasError(errors, 'lastName') }\n            helperText={ getError(errors, 'lastName') }\n            fullWidth\n            autoFocus\n            name='lastName'\n            onChange={ onChange }\n            margin=\"normal\"\n            value={ data.lastName }\n        />\n        <SelectControl\n            hasError={ hasError(errors, 'userType') }\n            error={ getError(errors, 'userType') }\n            options={ getUserTypes() }\n            selected={ data.userType }\n            onChange={ onChange }\n            label={ 'User type' }\n            name={ 'userType' }\n            nameKey={ 'name' }\n            valueKey={ 'value' }\n        />\n        <div className='submit-container'>\n            <Button variant=\"contained\" color=\"primary\" onClick={ onSubmit }>\n                { strings.userForm.ok }\n            </Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={ onCancel }>\n                { strings.userForm.cancel }\n            </Button>\n        </div>\n    </form>\n);\n\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}