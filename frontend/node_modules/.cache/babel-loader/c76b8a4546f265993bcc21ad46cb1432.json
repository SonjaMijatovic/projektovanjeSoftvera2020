{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/doctoreType/AddDoctorType.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport Grid from '@material-ui/core/Grid';\nimport { Paper } from \"@material-ui/core\";\nimport strings from \"../../../localization\";\nimport Validators from \"../../../constants/ValidatorTypes\";\nimport FormComponent from \"../../../common/FormComponent\";\nimport UserForm from \"../../../components/forms/admin/user/UserForm\";\nimport { addUser } from \"../../../services/admin/UserAdminService\";\nimport { withSnackbar } from \"notistack\";\nimport DoctorTypeForm from '../../../components/forms/admin/doctorType/DoctorTypeForm';\n\nclass AddDoctorType extends FormComponent {\n  constructor(props) {\n    super(props);\n    this.validationList = {\n      name: [{\n        type: Validators.REQUIRED\n      }]\n    };\n    this.state = {\n      data: props.data ? props.data : {},\n      errors: {}\n    };\n    this.props.changeFullScreen(false);\n    this.submit = this.submit.bind(this);\n  }\n\n  submit() {\n    if (!this.validate()) {\n      return;\n    }\n\n    this.showDrawerLoader();\n    addUser(this.state.data).then(response => {\n      if (!response.ok) {\n        this.props.onFinish(null);\n        this.props.enqueueSnackbar(strings.addUser.errorAddingUser, {\n          variant: 'error'\n        });\n        return;\n      }\n\n      this.props.enqueueSnackbar(strings.addUser.userAdded, {\n        variant: 'error'\n      });\n      this.props.onFinish(response.data.user);\n      this.hideDrawerLoader();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      id: \"page\",\n      item: true,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, strings.addUser.pageTitle)), /*#__PURE__*/React.createElement(Paper, {\n      className: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DoctorTypeForm, {\n      onChange: this.changeData,\n      onSubmit: this.submit,\n      data: this.state.data,\n      errors: this.state.errors,\n      onCancel: this.props.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers,\n  siteDataReducers\n}) {\n  return {\n    menu: menuReducers,\n    siteData: siteDataReducers\n  };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(AddDoctorType)));","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/doctoreType/AddDoctorType.js"],"names":["React","bindActionCreators","Actions","withRouter","connect","Grid","Paper","strings","Validators","FormComponent","UserForm","addUser","withSnackbar","DoctorTypeForm","AddDoctorType","constructor","props","validationList","name","type","REQUIRED","state","data","errors","changeFullScreen","submit","bind","validate","showDrawerLoader","then","response","ok","onFinish","enqueueSnackbar","errorAddingUser","variant","userAdded","user","hideDrawerLoader","render","pageTitle","changeData","onCancel","mapDispatchToProps","dispatch","mapStateToProps","menuReducers","siteDataReducers","menu","siteData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport Grid from '@material-ui/core/Grid';\nimport {Paper} from \"@material-ui/core\";\nimport strings from \"../../../localization\";\nimport Validators from \"../../../constants/ValidatorTypes\";\nimport FormComponent from \"../../../common/FormComponent\";\nimport UserForm from \"../../../components/forms/admin/user/UserForm\";\nimport {addUser} from \"../../../services/admin/UserAdminService\";\nimport {withSnackbar} from \"notistack\";\nimport DoctorTypeForm from '../../../components/forms/admin/doctorType/DoctorTypeForm';\n\nclass AddDoctorType extends FormComponent {\n\n    validationList = {\n        name: [ {type: Validators.REQUIRED } ]\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: props.data ? props.data : {},\n            errors: {}\n        };\n\n        this.props.changeFullScreen(false);\n\n        this.submit = this.submit.bind(this);\n    }\n\n    submit() {\n\n        if(!this.validate()) {\n            return;\n        }\n\n        this.showDrawerLoader();\n\n        addUser(this.state.data).then(response => {\n\n            if(!response.ok) {\n                this.props.onFinish(null);\n                this.props.enqueueSnackbar(strings.addUser.errorAddingUser, { variant: 'error' });\n                return;\n            }\n\n            this.props.enqueueSnackbar(strings.addUser.userAdded, { variant: 'error' });\n            this.props.onFinish(response.data.user);\n\n            this.hideDrawerLoader();\n        });\n    }\n\n    render() {\n\n        return (\n            <Grid id='page' item md={ 12 }>\n\n                <div className='header'>\n                    <h1>{ strings.addUser.pageTitle }</h1>\n                </div>\n\n                <Paper className='paper'>\n                    <DoctorTypeForm onChange={ this.changeData } onSubmit={ this.submit }\n                                data={ this.state.data } errors={ this.state.errors } onCancel={ this.props.onCancel }/>\n                </Paper>\n\n            </Grid>\n\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers, siteDataReducers })\n{\n    return { menu: menuReducers, siteData: siteDataReducers };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(AddDoctorType)));"]},"metadata":{},"sourceType":"module"}