{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/components/controls/SelectControl.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { getDropdownOptions } from '../../util/DropdownUtil';\nimport BaseControl from './BaseControl';\n\nclass SelectControl extends BaseControl {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: getDropdownOptions(props.options ? props.options : [], props.name, props.nameKey),\n      selected: props.selected ? props.selected : undefined,\n      valueKey: props.valueKey ? props.valueKey : '',\n      nameKey: props.nameKey ? props.nameKey : '',\n      name: props.name ? props.name : '',\n      hasError: props.hasError,\n      error: props.error ? props.error : '',\n      placeholder: props.placeholder ? props.placeholder : 'Select...',\n      isLoading: props.isLoading ? props.isLoading : false,\n      disabled: false,\n      inputRef: props.inputRef\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      options: getDropdownOptions(props.options ? props.options : [], props.name, props.nameKey),\n      hasError: props.hasError,\n      error: props.error ? props.error : '',\n      selected: props.selected ? props.selected : undefined,\n      placeholder: props.placeholder ? props.placeholder : 'Select...',\n      isLoading: props.isLoading ? props.isLoading : false,\n      disabled: props.disabled\n    });\n  }\n\n  getValue() {\n    if (!this.state.selected) {\n      return null;\n    }\n\n    if (this.state.valueKey) {\n      const result = this.state.options.find(option => option.value[this.state.valueKey] == this.state.selected[this.state.valueKey]);\n\n      if (result) {\n        return result;\n      }\n    }\n\n    return this.state.options.find(option => option.value[this.state.valueKey] == this.state.selected);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'select-control-container' + (this.state.hasError ? ' error' : ''),\n      style: this.props.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, this.props.label && /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.props.label), /*#__PURE__*/React.createElement(Select, {\n      isDisabled: this.state.disabled,\n      label: this.props.label,\n      placeholder: this.state.placeholder,\n      onChange: event => this.onChange(event),\n      options: this.state.options,\n      value: this.getValue(),\n      isClearable: this.props.isClearable,\n      isLoading: this.state.isLoading,\n      ref: this.state.inputRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), this.state.hasError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, this.state.error));\n  }\n\n}\n\nexport default SelectControl;","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/components/controls/SelectControl.js"],"names":["React","Select","getDropdownOptions","BaseControl","SelectControl","constructor","props","state","options","name","nameKey","selected","undefined","valueKey","hasError","error","placeholder","isLoading","disabled","inputRef","componentWillReceiveProps","setState","getValue","result","find","option","value","render","style","label","event","onChange","isClearable"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Select from 'react-select'\nimport {getDropdownOptions} from '../../util/DropdownUtil';\nimport BaseControl from './BaseControl';\n\nclass SelectControl extends BaseControl {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: getDropdownOptions(props.options ? props.options : [], props.name, props.nameKey ),\n            selected: props.selected ? props.selected : undefined,\n            valueKey:  props.valueKey ? props.valueKey : '',\n            nameKey: props.nameKey ? props.nameKey : '',\n            name: props.name ? props.name: '',\n            hasError: props.hasError,\n            error: props.error ? props.error : '',\n            placeholder: props.placeholder ? props.placeholder : 'Select...',\n            isLoading: props.isLoading ? props.isLoading : false,\n            disabled: false,\n            inputRef: props.inputRef\n        }\n    }\n\n    componentWillReceiveProps(props) {\n\n        this.setState({\n            options: getDropdownOptions(props.options ? props.options : [], props.name, props.nameKey ),\n            hasError: props.hasError,\n            error: props.error ? props.error : '',\n            selected: props.selected ? props.selected : undefined,\n            placeholder: props.placeholder ? props.placeholder : 'Select...',\n            isLoading: props.isLoading ? props.isLoading : false,\n            disabled: props.disabled\n        })\n\n    }\n\n    getValue() {\n\n        if(!this.state.selected) {\n            return null;\n        }\n\n        if(this.state.valueKey) {\n            const result = this.state.options.find(option => option.value[this.state.valueKey] == this.state.selected[this.state.valueKey]);\n\n            if(result) {\n                return result;\n            }\n        }\n        return this.state.options.find(option => option.value[this.state.valueKey] == this.state.selected)\n    }\n\n    render() {\n\n        return (\n            <div className={'select-control-container' + (this.state.hasError ? ' error' : '')} style={ this.props.style }>\n                {\n                    this.props.label &&\n                    <label>{ this.props.label }</label>\n                }\n\n                <Select\n                    isDisabled={this.state.disabled}\n                    label={ this.props.label }\n                    placeholder={ this.state.placeholder }\n                    onChange={ (event) => this.onChange(event) }\n                    options={ this.state.options }\n                    value={this.getValue()}\n                    isClearable={ this.props.isClearable }\n                    isLoading={this.state.isLoading}\n                    ref={this.state.inputRef}\n                />\n\n                {\n                    this.state.hasError &&\n                    <p className='error'>{ this.state.error }</p>\n                }\n            </div>\n        )\n    }\n}\n\nexport default SelectControl;"]},"metadata":{},"sourceType":"module"}