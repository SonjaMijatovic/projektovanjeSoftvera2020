{"ast":null,"code":"import CONFIG from '../config';\nimport HttpMethod from '../constants/HttpMethod';\nimport { request } from './HTTP';\nimport history from '../history';\nimport { isUserOneOfRoles, isUserRole } from \"../util/UserUtil\";\n/** OAUTH **/\n\nexport async function login(username, password) {\n  clearUserData();\n  let data = {\n    email: username,\n    password: password\n  };\n  console.log(data);\n  return await request('/api/token', data, HttpMethod.POST).then(response => {\n    if (!response.ok) {\n      return response;\n    }\n\n    setTokenToLocalStorage(response.data, response.data);\n    return request('/api/users/current').then(response => {\n      if (response.data) {\n        setUserToLocalStorage(response.data);\n      } else {\n        clearUserData();\n        response.ok = false;\n      }\n\n      return response;\n    });\n  });\n}\nexport async function unlock(username, password) {\n  clearUserDataLock();\n  let data = {\n    client_id: CONFIG.clientId,\n    client_secret: CONFIG.clientSecret,\n    grant_type: 'password',\n    username: username,\n    password: password\n  };\n  return await request('/oauth/v2/token', data, HttpMethod.GET).then(response => {\n    if (!response.ok) {\n      return response;\n    }\n\n    setTokenToLocalStorage(response.data.access_token, response.data.refresh_token);\n    return response;\n  });\n}\nexport async function socialLogin(provider, email, firstName, lastName, socialId, accessToken, expiresAt) {\n  let data = {\n    provider: provider,\n    email: email,\n    firstName: firstName ? firstName : '',\n    lastName: lastName ? lastName : '',\n    socialId: socialId,\n    accessToken: accessToken,\n    expiresAt: expiresAt\n  };\n  return await request('/social/authenticate', data, HttpMethod.POST).then(response => {\n    if (!response.ok) {\n      return;\n    }\n\n    setSocialTokenToLocalStorage(response.data.access_token);\n    return request('/user/current').then(response => {\n      if (response.data.user) {\n        if (isUserOneOfRoles(response.data.user, CONFIG.rolesAllowed)) {\n          setUserToLocalStorage(response.data.user);\n        } else {\n          clearUserData();\n          response.ok = false;\n        }\n      }\n\n      return response;\n    });\n  });\n}\nexport async function refreshToken(refreshToken) {\n  let data = {\n    client_id: CONFIG.clientId,\n    client_secret: CONFIG.clientSecret,\n    grant_type: 'refresh_token',\n    refresh_token: refreshToken\n  };\n  return await request('/oauth/v2/token', data, HttpMethod.GET).then(response => {\n    if (response.data && response.data.access_token && response.data.refresh_token) {\n      setTokenToLocalStorage(response.data.access_token, response.data.refresh_token);\n    }\n\n    return true;\n  });\n}\nexport function logout() {\n  clearUserData();\n  history.push(\"/\");\n}\nexport function lock() {\n  clearUserDataLock();\n  history.push(\"/\");\n}\n/** LOCAL STORAGE  **/\n\nexport function setUserToLocalStorage(user) {\n  localStorage.setItem('user', JSON.stringify(user));\n}\nexport function getUserFromLocalStorage() {\n  let user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n}\nexport function setTokenToLocalStorage(access_token, refresh_token) {\n  localStorage.setItem(CONFIG.tokenKey, access_token);\n  localStorage.setItem(CONFIG.refreshTokenKey, refresh_token);\n}\nexport function getRefreshToken() {\n  return localStorage.getItem(CONFIG.refreshTokenKey);\n}\nexport function getToken() {\n  return localStorage.getItem(CONFIG.tokenKey);\n}\nexport function setSocialTokenToLocalStorage(access_token) {\n  localStorage.setItem(CONFIG.socialTokenKey, access_token);\n}\nexport function clearUserData() {\n  localStorage.removeItem('user');\n  clearUserDataLock();\n}\n\nfunction clearUserDataLock() {\n  localStorage.removeItem(CONFIG.tokenKey);\n  localStorage.removeItem(CONFIG.refreshTokenKey);\n}\n\nexport function isUserLoggedIn() {\n  return getUserFromLocalStorage() != null && getToken();\n}\nexport function isUserLocked() {\n  return getUserFromLocalStorage() && !getToken();\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/base/OAuth.js"],"names":["CONFIG","HttpMethod","request","history","isUserOneOfRoles","isUserRole","login","username","password","clearUserData","data","email","console","log","POST","then","response","ok","setTokenToLocalStorage","setUserToLocalStorage","unlock","clearUserDataLock","client_id","clientId","client_secret","clientSecret","grant_type","GET","access_token","refresh_token","socialLogin","provider","firstName","lastName","socialId","accessToken","expiresAt","setSocialTokenToLocalStorage","user","rolesAllowed","refreshToken","logout","push","lock","localStorage","setItem","JSON","stringify","getUserFromLocalStorage","getItem","parse","tokenKey","refreshTokenKey","getRefreshToken","getToken","socialTokenKey","removeItem","isUserLoggedIn","isUserLocked"],"mappings":"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","sourcesContent":["import CONFIG from '../config';\nimport HttpMethod from '../constants/HttpMethod';\nimport { request } from './HTTP';\nimport history from '../history';\nimport {isUserOneOfRoles, isUserRole} from \"../util/UserUtil\";\n\n/** OAUTH **/\n\nexport async function login(username, password) {\n\n    clearUserData();\n\n    let data = {\n        email: username,\n        password: password\n    };\n\n    console.log(data);\n\n    return await request('/api/token', data, HttpMethod.POST).then((response) => {\n\n            if(!response.ok) {\n                return response;\n            }\n\n            setTokenToLocalStorage(response.data, response.data);\n\n            return request('/api/users/current').then((response) => {\n\n                if(response.data) {\n\n                    setUserToLocalStorage(response.data)\n                }\n                else {\n                    clearUserData();\n                    response.ok = false;\n                }\n\n                return response;\n            });\n        }\n    );\n}\n\nexport async function unlock(username, password) {\n\n    clearUserDataLock();\n\n    let data = {\n        client_id: CONFIG.clientId,\n        client_secret: CONFIG.clientSecret,\n        grant_type: 'password',\n        username: username,\n        password: password\n    };\n\n    return await request('/oauth/v2/token', data, HttpMethod.GET).then((response) => {\n\n            if(!response.ok) {\n                return response;\n            }\n\n            setTokenToLocalStorage(response.data.access_token, response.data.refresh_token);\n\n            return response;\n        }\n    );\n}\n\nexport async function socialLogin(provider, email, firstName, lastName, socialId, accessToken, expiresAt) {\n\n    let data = {\n        provider: provider,\n        email: email,\n        firstName: firstName ? firstName : '',\n        lastName: lastName ? lastName : '',\n        socialId: socialId,\n        accessToken: accessToken,\n        expiresAt: expiresAt\n    };\n\n    return await request('/social/authenticate', data, HttpMethod.POST).then((response) => {\n\n        if(!response.ok) {\n            return;\n        }\n\n        setSocialTokenToLocalStorage(response.data.access_token);\n\n        return request('/user/current').then((response) => {\n\n            if(response.data.user) {\n\n                if(isUserOneOfRoles(response.data.user, CONFIG.rolesAllowed)) {\n                    setUserToLocalStorage(response.data.user)\n                }\n                else {\n\n                    clearUserData();\n                    response.ok = false;\n\n                }\n            }\n\n            return response;\n        });\n    });\n}\n\nexport async function refreshToken(refreshToken) {\n\n    let data = {\n        client_id: CONFIG.clientId,\n        client_secret: CONFIG.clientSecret,\n        grant_type: 'refresh_token',\n        refresh_token: refreshToken\n    };\n\n    return await request('/oauth/v2/token', data, HttpMethod.GET).then((response) => {\n\n            if(response.data && response.data.access_token && response.data.refresh_token) {\n                setTokenToLocalStorage(response.data.access_token, response.data.refresh_token);\n            }\n\n            return true;\n        }\n    );\n}\n\nexport function logout() {\n    clearUserData();\n    history.push(\"/\");\n}\n\nexport function lock() {\n    clearUserDataLock();\n    history.push(\"/\");\n}\n\n/** LOCAL STORAGE  **/\n\nexport function setUserToLocalStorage(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n}\n\nexport function getUserFromLocalStorage() {\n\n    let user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n}\n\nexport function setTokenToLocalStorage(access_token, refresh_token) {\n    localStorage.setItem(CONFIG.tokenKey, access_token);\n    localStorage.setItem(CONFIG.refreshTokenKey, refresh_token);\n}\n\nexport function getRefreshToken() {\n    return localStorage.getItem(CONFIG.refreshTokenKey);\n}\n\nexport function getToken() {\n    return localStorage.getItem(CONFIG.tokenKey);\n}\n\nexport function setSocialTokenToLocalStorage(access_token) {\n    localStorage.setItem(CONFIG.socialTokenKey, access_token);\n}\n\nexport function clearUserData() {\n    localStorage.removeItem('user');\n    clearUserDataLock();\n}\n\nfunction clearUserDataLock() {\n    localStorage.removeItem(CONFIG.tokenKey);\n    localStorage.removeItem(CONFIG.refreshTokenKey);\n}\n\nexport function isUserLoggedIn() {\n    return getUserFromLocalStorage() != null && getToken();\n}\n\nexport function isUserLocked() {\n    return getUserFromLocalStorage() && !getToken();\n}"]},"metadata":{},"sourceType":"module"}