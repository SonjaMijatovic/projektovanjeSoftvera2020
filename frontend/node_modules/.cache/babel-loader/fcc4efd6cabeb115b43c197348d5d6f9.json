{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/medicines/UpdateMedicine.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport Grid from '@material-ui/core/Grid';\nimport { Paper } from \"@material-ui/core\";\nimport Validators from \"../../../constants/ValidatorTypes\";\nimport FormComponent from \"../../../common/FormComponent\";\nimport { withSnackbar } from \"notistack\";\nimport { addMedicine, updateMedicine } from '../../../services/MedicineService';\nimport MedicineUpdateForm from '../../../components/forms/admin/medicine/MedicineUpdateForm';\n\nclass UpdateMedicine extends FormComponent {\n  constructor(props) {\n    super(props);\n    this.validationList = {\n      amount: [{\n        type: Validators.REQUIRED\n      }]\n    };\n    this.state = {\n      data: props.data ? props.data : {},\n      errors: {}\n    };\n    this.props.changeFullScreen(false);\n    this.submit = this.submit.bind(this);\n  }\n\n  submit() {\n    if (!this.validate()) {\n      return;\n    }\n\n    this.showDrawerLoader();\n    updateMedicine(this.state.data.id, parseFloat(this.state.data.amount)).then(response => {\n      if (!response.ok) {\n        this.props.onFinish(null);\n        this.props.enqueueSnackbar(\"Error adding medicine\", {\n          variant: 'error'\n        });\n        return;\n      }\n\n      this.props.enqueueSnackbar(\"Medicine added\", {\n        variant: 'success'\n      });\n      this.props.onFinish(response.data.user);\n      this.hideDrawerLoader();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      id: \"page\",\n      item: true,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Update medicine\")), /*#__PURE__*/React.createElement(Paper, {\n      className: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MedicineUpdateForm, {\n      onChange: this.changeData,\n      onSubmit: this.submit,\n      data: this.state.data,\n      errors: this.state.errors,\n      onCancel: this.props.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers,\n  siteDataReducers\n}) {\n  return {\n    menu: menuReducers,\n    siteData: siteDataReducers\n  };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(UpdateMedicine)));","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/medicines/UpdateMedicine.js"],"names":["React","bindActionCreators","Actions","withRouter","connect","Grid","Paper","Validators","FormComponent","withSnackbar","addMedicine","updateMedicine","MedicineUpdateForm","UpdateMedicine","constructor","props","validationList","amount","type","REQUIRED","state","data","errors","changeFullScreen","submit","bind","validate","showDrawerLoader","id","parseFloat","then","response","ok","onFinish","enqueueSnackbar","variant","user","hideDrawerLoader","render","changeData","onCancel","mapDispatchToProps","dispatch","mapStateToProps","menuReducers","siteDataReducers","menu","siteData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport Grid from '@material-ui/core/Grid';\nimport {Paper} from \"@material-ui/core\";\nimport Validators from \"../../../constants/ValidatorTypes\";\nimport FormComponent from \"../../../common/FormComponent\";\nimport {withSnackbar} from \"notistack\";\nimport { addMedicine, updateMedicine } from '../../../services/MedicineService';\nimport MedicineUpdateForm from '../../../components/forms/admin/medicine/MedicineUpdateForm';\n\nclass UpdateMedicine extends FormComponent {\n\n    validationList = {\n        amount: [ {type: Validators.REQUIRED } ]\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: props.data ? props.data : {},\n            errors: {}\n        };\n\n        this.props.changeFullScreen(false);\n\n        this.submit = this.submit.bind(this);\n    }\n\n    submit() {\n\n        if(!this.validate()) {\n            return;\n        }\n\n        this.showDrawerLoader();\n\n        updateMedicine(this.state.data.id, parseFloat(this.state.data.amount)).then(response => {\n\n            if(!response.ok) {\n                this.props.onFinish(null);\n                this.props.enqueueSnackbar(\"Error adding medicine\", { variant: 'error' });\n                return;\n            }\n\n            this.props.enqueueSnackbar(\"Medicine added\", { variant: 'success' });\n            this.props.onFinish(response.data.user);\n\n            this.hideDrawerLoader();\n        });\n    }\n\n    render() {\n\n        return (\n            <Grid id='page' item md={ 12 }>\n\n                <div className='header'>\n                    <h1>Update medicine</h1>\n                </div>\n\n                <Paper className='paper'>\n                    <MedicineUpdateForm onChange={ this.changeData } onSubmit={ this.submit }\n                                data={ this.state.data } errors={ this.state.errors } onCancel={ this.props.onCancel }/>\n                </Paper>\n\n            </Grid>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers, siteDataReducers })\n{\n    return { menu: menuReducers, siteData: siteDataReducers };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(UpdateMedicine)));"]},"metadata":{},"sourceType":"module"}