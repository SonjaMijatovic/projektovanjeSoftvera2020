{"ast":null,"code":"var _jsxFileName = \"/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/base/AuthWrapper.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { checkPath } from '../route';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { isUserLocked, isUserLoggedIn } from \"./OAuth\";\n\nclass AuthWrapper extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  checkPermission() {\n    let needAuth = checkPath(this.props.location.pathname);\n\n    if (needAuth && isUserLocked()) {\n      this.props.history.push({\n        pathname: '/lock',\n        state: {\n          redirectUrl: this.props.location.pathname\n        }\n      });\n      return false;\n    } else if (needAuth && !isUserLoggedIn()) {\n      this.props.history.push({\n        pathname: '/login',\n        state: {\n          redirectUrl: this.props.location.pathname\n        }\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    if (!this.checkPermission()) {\n      return '';\n    }\n\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, children);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nfunction mapStateToProps({\n  authReducers\n}) {\n  return {\n    auth: authReducers\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AuthWrapper));","map":{"version":3,"sources":["/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/base/AuthWrapper.js"],"names":["React","Component","withRouter","checkPath","connect","bindActionCreators","isUserLocked","isUserLoggedIn","AuthWrapper","constructor","props","componentDidUpdate","prevProps","location","pathname","window","scrollTo","checkPermission","needAuth","history","push","state","redirectUrl","render","children","mapDispatchToProps","dispatch","mapStateToProps","authReducers","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,SAA3C;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAEhCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,QAApB,KAAiCF,SAAS,CAACC,QAAV,CAAmBC,QAAxD,EAAkE;AAC9DC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH;AACJ;;AAEDC,EAAAA,eAAe,GAAG;AAEd,QAAIC,QAAQ,GAAGf,SAAS,CAAC,KAAKO,KAAL,CAAWG,QAAX,CAAoBC,QAArB,CAAxB;;AAEA,QAAGI,QAAQ,IAAIZ,YAAY,EAA3B,EAA+B;AAE3B,WAAKI,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB;AACpBN,QAAAA,QAAQ,EAAE,OADU;AAEpBO,QAAAA,KAAK,EAAK;AAAEC,UAAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWG,QAAX,CAAoBC;AAAnC;AAFU,OAAxB;AAKA,aAAO,KAAP;AACH,KARD,MASK,IAAGI,QAAQ,IAAI,CAACX,cAAc,EAA9B,EAAkC;AAEnC,WAAKG,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB;AACpBN,QAAAA,QAAQ,EAAE,QADU;AAEpBO,QAAAA,KAAK,EAAK;AAAEC,UAAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWG,QAAX,CAAoBC;AAAnC;AAFU,OAAxB;AAKA,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH;;AAEDS,EAAAA,MAAM,GAAG;AAEL,QAAG,CAAC,KAAKN,eAAL,EAAJ,EAA4B;AACxB,aAAO,EAAP;AACH;;AAED,UAAM;AAACO,MAAAA;AAAD,QAAa,KAAKd,KAAxB;AAEA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMc,QADN,CADJ;AAKH;;AAnD+B;;AAsDpC,SAASC,kBAAT,CAA4BC,QAA5B,EACA;AACI,SAAOrB,kBAAkB,CAAC,EAAD,EAAKqB,QAAL,CAAzB;AACH;;AAED,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EACA;AACI,SAAO;AACHC,IAAAA,IAAI,EAAED;AADH,GAAP;AAGH;;AAED,eAAe1B,UAAU,CAACE,OAAO,CAACuB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjB,WAA7C,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { checkPath } from '../route';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {isUserLocked, isUserLoggedIn} from \"./OAuth\";\n\nclass AuthWrapper extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    checkPermission() {\n\n        let needAuth = checkPath(this.props.location.pathname);\n\n        if(needAuth && isUserLocked()) {\n\n            this.props.history.push({\n                pathname: '/lock',\n                state   : { redirectUrl: this.props.location.pathname }\n            });\n\n            return false;\n        }\n        else if(needAuth && !isUserLoggedIn()) {\n\n            this.props.history.push({\n                pathname: '/login',\n                state   : { redirectUrl: this.props.location.pathname }\n            });\n\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n\n        if(!this.checkPermission()) {\n            return '';\n        }\n\n        const {children} = this.props;\n\n        return (\n            <React.Fragment>\n                { children }\n            </React.Fragment>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({}, dispatch);\n}\n\nfunction mapStateToProps({ authReducers })\n{\n    return {\n        auth: authReducers,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AuthWrapper));\n"]},"metadata":{},"sourceType":"module"}