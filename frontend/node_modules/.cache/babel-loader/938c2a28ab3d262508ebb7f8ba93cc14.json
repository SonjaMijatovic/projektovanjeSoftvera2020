{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/user/Login.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../localization\";\nimport Page from \"../../common/Page\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LoginForm from \"../../components/forms/user/LoginForm\";\nimport Validators from \"../../constants/ValidatorTypes\";\nimport { login } from \"../../base/OAuth\";\n\nclass Login extends Page {\n  constructor(props) {\n    super(props);\n    this.validationList = {\n      email: [{\n        type: Validators.EMAIL\n      }],\n      password: [{\n        type: Validators.REQUIRED\n      }]\n    };\n    this.state = {\n      data: {},\n      errors: {},\n      redirectUrl: props.location.state ? props.location.state.redirectUrl : '/'\n    };\n    this.props.changeFullScreen(true);\n    this.keyPress = this.keyPress.bind(this);\n    this.register = this.register.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.user) {\n      this.props.history.push('/');\n    }\n  }\n\n  keyPress(event) {\n    if (event.key == 'Enter') {\n      this.login();\n    }\n  }\n\n  login() {\n    if (!this.validate()) {\n      return;\n    }\n\n    login(this.state.data.email, this.state.data.password).then(response => {\n      if (!response.ok) {\n        this.setError('email', strings.login.wrongCredentials);\n        return;\n      }\n\n      this.props.login(response.data);\n      this.props.history.push({\n        pathname: this.state.redirectUrl\n      });\n    });\n  }\n\n  register() {\n    this.props.history.push('register');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, strings.login.login), /*#__PURE__*/React.createElement(LoginForm, {\n      onSubmit: () => this.login(),\n      onChange: this.changeData,\n      keyPress: this.keyPress,\n      register: this.register,\n      data: this.state.data,\n      errors: this.state.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen,\n    login: Actions.login\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers,\n  authReducers\n}) {\n  return {\n    menu: menuReducers,\n    auth: authReducers\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/user/Login.js"],"names":["React","bindActionCreators","Actions","withRouter","connect","strings","Page","Grid","Paper","LoginForm","Validators","login","Login","constructor","props","validationList","email","type","EMAIL","password","REQUIRED","state","data","errors","redirectUrl","location","changeFullScreen","keyPress","bind","register","componentDidMount","auth","user","history","push","event","key","validate","then","response","ok","setError","wrongCredentials","pathname","render","changeData","mapDispatchToProps","dispatch","mapStateToProps","menuReducers","authReducers","menu"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../localization\";\nimport Page from \"../../common/Page\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LoginForm from \"../../components/forms/user/LoginForm\";\nimport Validators from \"../../constants/ValidatorTypes\";\nimport {login} from \"../../base/OAuth\";\n\n\nclass Login extends Page {\n\n    validationList = {\n        email: [ {type: Validators.EMAIL } ],\n        password: [ {type: Validators.REQUIRED } ]\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            errors: {},\n            redirectUrl: props.location.state ? props.location.state.redirectUrl : '/'\n        };\n\n        this.props.changeFullScreen(true);\n\n        this.keyPress = this.keyPress.bind(this);\n        this.register = this.register.bind(this);\n    }\n\n    componentDidMount() {\n\n        if(this.props.auth.user) {\n            this.props.history.push('/');\n        }\n    }\n\n    keyPress(event) {\n\n        if(event.key == 'Enter') {\n            this.login()\n        }\n    }\n\n    login() {\n\n        if(!this.validate()) {\n            return;\n        }\n\n        login(this.state.data.email, this.state.data.password).then(response => {\n\n            if(!response.ok) {\n\n                this.setError('email', strings.login.wrongCredentials);\n                return;\n            }\n\n            this.props.login(response.data);\n\n            this.props.history.push({\n                pathname: this.state.redirectUrl\n            })\n        });\n    }\n\n    register() {\n        this.props.history.push('register');\n    }\n\n    render() {\n\n        return (\n\n            <div id='login'>\n                <Grid item md={6}>\n                    <Paper className='paper'>\n\n                        <h1>{ strings.login.login }</h1>\n\n\n                        <LoginForm onSubmit={ () => this.login() } onChange={ this.changeData }\n                                   keyPress={ this.keyPress }\n                                   register={ this.register }\n                                   data={ this.state.data } errors={ this.state.errors }/>\n                    </Paper>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen,\n        login: Actions.login\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers, authReducers })\n{\n    return { menu: menuReducers, auth: authReducers };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));"]},"metadata":{},"sourceType":"module"}