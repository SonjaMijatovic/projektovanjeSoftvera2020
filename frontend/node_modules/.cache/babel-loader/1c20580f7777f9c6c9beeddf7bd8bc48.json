{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/appointments/AppointmentsList.js\";\nimport React from 'react';\nimport TablePage from \"../../../common/TablePage\";\nimport { deleteUser, getUsers, blockUser, unblockUser } from \"../../../services/admin/UserAdminService\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../../localization\";\nimport { withSnackbar } from \"notistack\";\nimport { Button, ListItemIcon, ListItemText, Menu, MenuItem, TableCell } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { getDoctorTypes } from '../../../services/DoctorTypeService';\nimport UserType from '../../../constants/UserType';\nimport { getAppointments, cancelAppointment, reserveAppointment } from '../../../services/AppointmentService';\nimport AddAppointment from './AddAppointment';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Drawer } from \"@material-ui/core\";\nimport DrawerWrapper from \"../../../common/DrawerWrapper\";\nimport SelectControl from '../../../components/controls/SelectControl';\nimport DatePickerControl from '../../../components/controls/DatePickerControl';\n\nclass AppointmentList extends TablePage {\n  constructor(props) {\n    super(props);\n    this.tableDescription = [{\n      key: 'date',\n      label: \"Date\"\n    }, {\n      key: 'doctor',\n      label: \"Doctor\",\n      transform: 'renderColumnUser'\n    }, {\n      key: 'patient',\n      label: \"Patient\",\n      transform: 'renderColumnUser'\n    }, {\n      key: 'isFree',\n      label: \"Is free\",\n      transform: 'renderColumnDeleted'\n    }];\n    this.state.doctoreTypes = [];\n    this.state.showAdd = this.props.auth.user.userType == \"ADMIN\";\n  }\n\n  renderColumnUser(item) {\n    if (!item) {\n      return '';\n    }\n\n    return item.firstName + \" \" + item.lastName;\n  }\n\n  componentDidMount() {}\n\n  fetchData() {\n    this.setState({\n      lockTable: true\n    });\n    getUsers({\n      page: this.state.searchData.page,\n      perPage: this.state.searchData.perPage,\n      search: this.state.searchData.search.toLowerCase()\n    }).then(response => {\n      if (!response.ok) {\n        return;\n      }\n\n      let result = [];\n\n      for (let item of response.data.entities) {\n        if (item.userType == UserType.DOCTOR) {\n          result.push(item);\n        }\n      }\n\n      this.setState({\n        doctors: result\n      });\n    });\n    getAppointments({\n      page: this.state.searchData.page,\n      perPage: this.state.searchData.perPage,\n      search: this.state.searchData.search.toLowerCase(),\n      doctor: this.state.data.doctor ? this.state.data.doctor.id : -1,\n      type: this.state.data.type ? this.state.data.type.value : '',\n      from: this.state.data.from ? new Date(this.state.data.from).getTime() : 0,\n      to: this.state.data.from ? new Date(this.state.data.to).getTime() : 0\n    }).then(response => {\n      if (!response.ok) {\n        return;\n      }\n\n      this.setState({\n        tableData: response.data.entities,\n        total: response.data.total,\n        lockTable: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getPageHeader() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 16\n      }\n    }, \"Appointments\");\n  }\n\n  renderAddContent() {\n    return /*#__PURE__*/React.createElement(AddAppointment, {\n      doctors: this.state.doctors,\n      onCancel: this.onCancel,\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }\n    });\n  }\n\n  delete(item) {\n    this.setState({\n      lockTable: true\n    });\n    deleteUser(item.id).then(response => {\n      if (response && !response.ok) {\n        this.onFinish(null);\n        return;\n      }\n\n      this.props.enqueueSnackbar(strings.userList.userDelete, {\n        variant: 'success'\n      });\n      this.onFinish(item);\n      this.cancelDelete();\n      this.setState({\n        lockTable: false\n      });\n    });\n  }\n\n  handleUnblock(item) {\n    cancelAppointment(item.id).then(response => {\n      this.fetchData();\n    });\n  }\n\n  handleBlock(item) {\n    reserveAppointment(item.id).then(response => {\n      this.fetchData();\n    });\n  }\n\n  renderRowMenu(index, item) {\n    let ariaOwns = 'action-menu-' + index;\n    return /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-owns\": this.state.anchorEl ? ariaOwns : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: event => this.handleMenuClick(event, ariaOwns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MoreVert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    })), ariaOwns === this.state.ariaOwns && /*#__PURE__*/React.createElement(Menu, {\n      id: ariaOwns,\n      anchorEl: this.state.anchorEl,\n      open: Boolean(this.state.anchorEl),\n      onClose: () => this.handleMenuClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, !item[this.deletedField] && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleMenuDelete(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: strings.table.delete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    })), item[this.deletedField] && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleRestore(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: strings.table.undo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    })), !item.isFree && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleUnblock(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    })), item.isFree && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleBlock(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: \"Reserve\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      id: \"table-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, this.renderDialog(strings.table.confirmDelete, 'To subscribe to this website, please enter your email address here. We will send\\n' + 'updates occasionally.', this.cancelDelete, this.delete), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, this.getPageHeader(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-controls\",\n      style: {\n        display: 'flex',\n        flexDirection: 'flex-row',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '250px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DatePickerControl, {\n      date: this.state.data.from,\n      name: 'from',\n      placeholder: \"From\",\n      onChange: this.changeData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '250px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DatePickerControl, {\n      date: this.state.data.to,\n      name: 'to',\n      placeholder: \"To\",\n      onChange: this.changeData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '150px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SelectControl, {\n      options: this.state.doctors,\n      selected: this.state.data.doctor,\n      onChange: this.changeData,\n      label: 'Doctor',\n      name: 'doctor',\n      nameKey: 'firstName',\n      valueKey: 'id',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '150px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SelectControl, {\n      options: [{\n        value: 'DATE',\n        name: 'Date'\n      }, {\n        value: 'DOCTOR',\n        name: 'Doctor'\n      }],\n      selected: this.state.data.type,\n      onChange: this.changeData,\n      label: 'Type',\n      name: 'type',\n      nameKey: 'name',\n      valueKey: 'value',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.fetchData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }, \"Find\"), this.state.showAdd && this.renderTableControls())), /*#__PURE__*/React.createElement(Paper, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, this.renderTable(this.state.tableData)), /*#__PURE__*/React.createElement(Drawer, {\n      id: \"drawer\",\n      anchor: \"right\",\n      open: this.showDrawer(),\n      onClose: () => this.setPageState(PageState.View),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DrawerWrapper, {\n      onBack: () => this.setPageState(PageState.View),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    }, this.renderDrawerContent())));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers,\n  authReducers\n}) {\n  return {\n    menu: menuReducers,\n    auth: authReducers\n  };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(AppointmentList)));","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/appointments/AppointmentsList.js"],"names":["React","TablePage","deleteUser","getUsers","blockUser","unblockUser","bindActionCreators","Actions","withRouter","connect","strings","withSnackbar","Button","ListItemIcon","ListItemText","Menu","MenuItem","TableCell","IconButton","MoreVert","UndoIcon","DeleteIcon","getDoctorTypes","UserType","getAppointments","cancelAppointment","reserveAppointment","AddAppointment","Grid","Paper","TextField","Drawer","DrawerWrapper","SelectControl","DatePickerControl","AppointmentList","constructor","props","tableDescription","key","label","transform","state","doctoreTypes","showAdd","auth","user","userType","renderColumnUser","item","firstName","lastName","componentDidMount","fetchData","setState","lockTable","page","searchData","perPage","search","toLowerCase","then","response","ok","result","data","entities","DOCTOR","push","doctors","doctor","id","type","value","from","Date","getTime","to","tableData","total","getPageHeader","renderAddContent","onCancel","onFinish","delete","enqueueSnackbar","userList","userDelete","variant","cancelDelete","handleUnblock","handleBlock","renderRowMenu","index","ariaOwns","anchorEl","undefined","event","handleMenuClick","Boolean","handleMenuClose","deletedField","handleMenuDelete","table","handleRestore","undo","isFree","render","renderDialog","confirmDelete","display","flexDirection","alignItems","width","changeData","name","renderTableControls","renderTable","showDrawer","setPageState","PageState","View","renderDrawerContent","mapDispatchToProps","dispatch","changeFullScreen","mapStateToProps","menuReducers","authReducers","menu"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TablePage from \"../../../common/TablePage\";\nimport {deleteUser, getUsers, blockUser, unblockUser} from \"../../../services/admin/UserAdminService\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../../localization\";\nimport {withSnackbar} from \"notistack\";\nimport {Button, ListItemIcon, ListItemText, Menu, MenuItem, TableCell} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { getDoctorTypes } from '../../../services/DoctorTypeService';\nimport UserType from '../../../constants/UserType';\nimport { getAppointments, cancelAppointment, reserveAppointment } from '../../../services/AppointmentService';\nimport AddAppointment from './AddAppointment';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {\n TextField, Drawer\n} from \"@material-ui/core\";\nimport DrawerWrapper from \"../../../common/DrawerWrapper\";\nimport SelectControl from '../../../components/controls/SelectControl';\nimport DatePickerControl from '../../../components/controls/DatePickerControl';\n\n\nclass AppointmentList extends TablePage {\n\n    tableDescription = [\n        { key: 'date', label: \"Date\" },\n        { key: 'doctor', label: \"Doctor\", transform: 'renderColumnUser' },\n        { key: 'patient', label: \"Patient\", transform: 'renderColumnUser' },\n        { key: 'isFree', label: \"Is free\", transform: 'renderColumnDeleted' }\n    ];\n\n    constructor(props) {\n        super(props);\n\n        this.state.doctoreTypes = [];\n\n        this.state.showAdd = this.props.auth.user.userType == \"ADMIN\"\n    }\n\n    renderColumnUser(item) {\n\n        if(!item) \n        {\n            return '';\n        }\n\n        return item.firstName + \" \" + item.lastName;\n    }\n\n    componentDidMount() {\n\n    }\n\n    fetchData() {\n\n        this.setState({\n            lockTable: true\n        });\n\n        getUsers({\n            page: this.state.searchData.page,\n            perPage: this.state.searchData.perPage,\n            search: this.state.searchData.search.toLowerCase()\n        }).then(response => {\n\n            if(!response.ok) {\n                return;\n            }\n\n            let result = [];\n\n            for(let item of response.data.entities) {\n                if (item.userType == UserType.DOCTOR) {\n                    result.push(item);\n                }\n            }\n\n            this.setState({\n                doctors: result,\n                \n            });\n        });\n\n        getAppointments({\n            page: this.state.searchData.page,\n            perPage: this.state.searchData.perPage,\n            search: this.state.searchData.search.toLowerCase(),\n            doctor: this.state.data.doctor ? this.state.data.doctor.id : -1,\n            type: this.state.data.type ? this.state.data.type.value : '',\n            from: this.state.data.from ? new Date(this.state.data.from).getTime() : 0,\n            to: this.state.data.from ? new Date(this.state.data.to).getTime() : 0\n        }).then(response => {\n\n            if(!response.ok) {\n                return;\n            }\n\n            this.setState({\n                tableData: response.data.entities,\n                total: response.data.total,\n                lockTable: false\n            });\n        });\n\n        \n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    getPageHeader() {\n        return <h1>Appointments</h1>;\n    }\n\n    renderAddContent() {\n        return <AddAppointment doctors={ this.state.doctors } onCancel={ this.onCancel } onFinish={ this.onFinish }/>\n    }\n\n    delete(item) {\n\n        this.setState({\n            lockTable: true\n        });\n\n        deleteUser(item.id).then(response => {\n\n            if(response && !response.ok) {\n                this.onFinish(null);\n                return;\n            }\n\n            this.props.enqueueSnackbar(strings.userList.userDelete, { variant: 'success' });\n\n            this.onFinish(item);\n            this.cancelDelete();\n\n            this.setState({\n                lockTable: false\n            });\n        });\n    }\n\n    handleUnblock(item) {\n        cancelAppointment(item.id).then(response => {\n            this.fetchData();\n        })\n    }\n\n    handleBlock(item) {\n        reserveAppointment(item.id).then(response => {\n            this.fetchData();\n        });\n    }\n\n    renderRowMenu(index, item) {\n\n        let ariaOwns = 'action-menu-' + index;\n\n        return(\n            <TableCell>\n                <IconButton\n                    aria-owns={ this.state.anchorEl ? ariaOwns : undefined }\n                    aria-haspopup=\"true\"\n                    onClick={ (event) => this.handleMenuClick(event, ariaOwns) }\n                >\n                    <MoreVert/>\n                </IconButton>\n                {\n                    ariaOwns === this.state.ariaOwns &&\n                    <Menu\n                        id={ ariaOwns }\n                        anchorEl={ this.state.anchorEl }\n                        open={ Boolean(this.state.anchorEl) }\n                        onClose={ () => this.handleMenuClose() }\n                    >\n                        {\n                            !item[this.deletedField] &&\n                            <MenuItem onClick={ () => this.handleMenuDelete(item) }>\n                                <ListItemIcon>\n                                    <DeleteIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary={ strings.table.delete }/>\n                            </MenuItem>\n                        }\n                        {\n                            item[this.deletedField] &&\n                            <MenuItem onClick={ () => this.handleRestore(item) }>\n                                <ListItemIcon>\n                                    <UndoIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary={ strings.table.undo }/>\n                            </MenuItem>\n                        }\n\n                        {\n                            !item.isFree &&\n                            <MenuItem onClick={ () => this.handleUnblock(item) }>\n                                <ListItemIcon>\n                                    <UndoIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Cancel\"/>\n                            </MenuItem>\n                        }\n\n{\n                            item.isFree &&\n                            <MenuItem onClick={ () => this.handleBlock(item) }>\n                                <ListItemIcon>\n                                    <UndoIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Reserve\"/>\n                            </MenuItem>\n                        }\n\n                    </Menu>\n                }\n\n            </TableCell>\n        );\n    }\n\n    render() {\n\n        return (\n            <Grid id='table-page'>\n                { this.renderDialog(strings.table.confirmDelete, 'To subscribe to this website, please enter your email address here. We will send\\n' +\n                    'updates occasionally.', this.cancelDelete, this.delete) }\n                <div className='header'>\n                    { this.getPageHeader() }\n\n                    <div className='filter-controls' style={{ display: 'flex',\n                flexDirection: 'flex-row', alignItems: 'center' }}>\n\n                    \n                            \n                            <div style={{ width: '250px' }}>\n                                <DatePickerControl\n                                    date={this.state.data.from}\n                                    name={'from'}\n                                    placeholder={ \"From\" }\n                                    onChange={this.changeData}\n                                />\n                            </div>\n\n                            <div style={{ width: '250px' }}>\n                                <DatePickerControl\n                                    date={this.state.data.to}\n                                    name={'to'}\n                                    placeholder={ \"To\" }\n                                    onChange={this.changeData}\n                                />\n                            </div>\n                            \n                            <div style={{ width: '150px' }}>\n                                <SelectControl\n                                    options={ this.state.doctors }\n                                    selected={ this.state.data.doctor }\n                                    onChange={ this.changeData }\n                                    label={ 'Doctor' }\n                                    name={ 'doctor' }\n                                    nameKey={ 'firstName' }\n                                    valueKey={ 'id' }\n                                />\n                            </div>\n\n                            <div style={{ width: '150px' }}>\n                                <SelectControl\n                                    options={ [\n                                        { value: 'DATE', name: 'Date' },\n                                        { value: 'DOCTOR', name: 'Doctor' }\n                                    ] }\n                                    selected={ this.state.data.type }\n                                    onChange={ this.changeData }\n                                    label={ 'Type' }\n                                    name={ 'type' }\n                                    nameKey={ 'name' }\n                                    valueKey={ 'value' }\n                                />\n                            </div>\n\n                            <Button onClick={ () => this.fetchData() } >Find</Button>\n                            \n\n                        {\n                            this.state.showAdd &&\n                            this.renderTableControls()\n                        }\n                    </div>\n                </div>\n                <Paper md={12}>\n                    { this.renderTable(this.state.tableData) }\n                </Paper>\n\n                <Drawer id='drawer' anchor='right' open={  this.showDrawer() } onClose={ () => this.setPageState(PageState.View) } >\n                    <DrawerWrapper onBack={ () => this.setPageState(PageState.View) }>\n                        { this.renderDrawerContent() }\n                    </DrawerWrapper>\n                </Drawer>\n            </Grid>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers, authReducers })\n{\n    return { menu: menuReducers, auth: authReducers };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(AppointmentList)));"]},"metadata":{},"sourceType":"module"}