{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/recepies/RecepieList.js\";\nimport React from 'react';\nimport TablePage from \"../../../common/TablePage\";\nimport { deleteUser, getUsers, blockUser, unblockUser } from \"../../../services/admin/UserAdminService\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../../localization\";\nimport { withSnackbar } from \"notistack\";\nimport { ListItemIcon, ListItemText, Menu, MenuItem, TableCell } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { getDoctorTypes } from '../../../services/DoctorTypeService';\nimport UserType from '../../../constants/UserType';\nimport { getMedicines } from '../../../services/MedicineService';\nimport AddRecepie from './AddRecepie';\n\nclass RecepieList extends TablePage {\n  constructor(props) {\n    super(props);\n    this.tableDescription = [{\n      key: 'patient',\n      label: \"Patient\",\n      transform: 'renderColumnUser'\n    }, {\n      key: 'medicine',\n      label: \"Medicine\",\n      transform: 'renderColumnMedicine'\n    }, {\n      key: 'amount',\n      label: \"Amount\"\n    }];\n    this.state.patiens = [];\n    this.state.medicines = [];\n  }\n\n  renderColumnMedicine(item) {\n    if (!item) {\n      return '';\n    }\n\n    return item.name;\n  }\n\n  renderColumnUser(item) {\n    if (!item) {\n      return '';\n    }\n\n    return item.firstName + \" \" + item.lastName;\n  }\n\n  componentDidMount() {}\n\n  fetchData() {\n    // this.setState({\n    //     lockTable: true\n    // });\n    getUsers({\n      page: this.state.searchData.page,\n      perPage: this.state.searchData.perPage,\n      search: this.state.searchData.search.toLowerCase()\n    }).then(response => {\n      if (!response.ok) {\n        return;\n      }\n\n      let result = [];\n\n      for (let item of response.data.entities) {\n        if (item.userType == UserType.PATIENT) {\n          result.push(item);\n        }\n      }\n\n      this.setState({\n        patiens: result\n      });\n    });\n    getMedicines({\n      page: this.state.searchData.page,\n      perPage: this.state.searchData.perPage,\n      search: this.state.searchData.search.toLowerCase()\n    }).then(response => {\n      if (!response.ok) {\n        return;\n      }\n\n      this.setState({\n        medicines: response.data.entities\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getPageHeader() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }\n    }, \"Recepies\");\n  }\n\n  renderAddContent() {\n    return /*#__PURE__*/React.createElement(AddRecepies, {\n      patiens: this.state.patiens,\n      medicines: this.state.medicines,\n      onCancel: this.onCancel,\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderRowMenu(index, item) {\n    let ariaOwns = 'action-menu-' + index;\n    return /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-owns\": this.state.anchorEl ? ariaOwns : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: event => this.handleMenuClick(event, ariaOwns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MoreVert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    })), ariaOwns === this.state.ariaOwns && /*#__PURE__*/React.createElement(Menu, {\n      id: ariaOwns,\n      anchorEl: this.state.anchorEl,\n      open: Boolean(this.state.anchorEl),\n      onClose: () => this.handleMenuClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, !item[this.deletedField] && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleMenuDelete(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: strings.table.delete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    })), item[this.deletedField] && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleRestore(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: strings.table.undo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    })), !item.isFree && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleUnblock(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    })), item.isFree && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => this.handleBlock(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      inset: true,\n      primary: \"Reserve\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers,\n  authReducers\n}) {\n  return {\n    menu: menuReducers,\n    auth: authReducers\n  };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(RecepieList)));","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/recepies/RecepieList.js"],"names":["React","TablePage","deleteUser","getUsers","blockUser","unblockUser","bindActionCreators","Actions","withRouter","connect","strings","withSnackbar","ListItemIcon","ListItemText","Menu","MenuItem","TableCell","IconButton","MoreVert","UndoIcon","DeleteIcon","getDoctorTypes","UserType","getMedicines","AddRecepie","RecepieList","constructor","props","tableDescription","key","label","transform","state","patiens","medicines","renderColumnMedicine","item","name","renderColumnUser","firstName","lastName","componentDidMount","fetchData","page","searchData","perPage","search","toLowerCase","then","response","ok","result","data","entities","userType","PATIENT","push","setState","getPageHeader","renderAddContent","onCancel","onFinish","renderRowMenu","index","ariaOwns","anchorEl","undefined","event","handleMenuClick","Boolean","handleMenuClose","deletedField","handleMenuDelete","table","delete","handleRestore","undo","isFree","handleUnblock","handleBlock","mapDispatchToProps","dispatch","changeFullScreen","mapStateToProps","menuReducers","authReducers","menu","auth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TablePage from \"../../../common/TablePage\";\nimport {deleteUser, getUsers, blockUser, unblockUser} from \"../../../services/admin/UserAdminService\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../../localization\";\nimport {withSnackbar} from \"notistack\";\nimport {ListItemIcon, ListItemText, Menu, MenuItem, TableCell} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { getDoctorTypes } from '../../../services/DoctorTypeService';\nimport UserType from '../../../constants/UserType';\nimport { getMedicines } from '../../../services/MedicineService';\nimport AddRecepie from './AddRecepie';\n\n\nclass RecepieList extends TablePage {\n\n    tableDescription = [\n        \n        { key: 'patient', label: \"Patient\", transform: 'renderColumnUser' },\n        { key: 'medicine', label: \"Medicine\", transform: 'renderColumnMedicine' },\n        { key: 'amount', label: \"Amount\" }\n    ];\n\n    constructor(props) {\n        super(props);\n\n        this.state.patiens = [];\n        this.state.medicines = [];\n    }\n\n    renderColumnMedicine(item) {\n        if(!item) \n        {\n            return '';\n        }\n\n        return item.name;\n    }\n\n    renderColumnUser(item) {\n\n        if(!item) \n        {\n            return '';\n        }\n\n        return item.firstName + \" \" + item.lastName;\n    }\n\n    componentDidMount() {\n\n    }\n\n    fetchData() {\n\n        // this.setState({\n        //     lockTable: true\n        // });\n\n        getUsers({\n            page: this.state.searchData.page,\n            perPage: this.state.searchData.perPage,\n            search: this.state.searchData.search.toLowerCase()\n        }).then(response => {\n\n            if(!response.ok) {\n                return;\n            }\n\n            let result = [];\n\n            for(let item of response.data.entities) {\n                if (item.userType == UserType.PATIENT) {\n                    result.push(item);\n                }\n            }\n\n            this.setState({\n                patiens: result,\n                \n            });\n        });\n\n        getMedicines({\n            page: this.state.searchData.page,\n            perPage: this.state.searchData.perPage,\n            search: this.state.searchData.search.toLowerCase()\n        }).then(response => {\n\n            if(!response.ok) {\n                return;\n            }\n\n            this.setState({\n                medicines: response.data.entities\n            });\n        });\n\n        \n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    getPageHeader() {\n        return <h1>Recepies</h1>;\n    }\n\n    renderAddContent() {\n        return <AddRecepies patiens={ this.state.patiens }\n        medicines={ this.state.medicines } onCancel={ this.onCancel } onFinish={ this.onFinish }/>\n    }\n\n    renderRowMenu(index, item) {\n\n        let ariaOwns = 'action-menu-' + index;\n\n        return(\n            <TableCell>\n                <IconButton\n                    aria-owns={ this.state.anchorEl ? ariaOwns : undefined }\n                    aria-haspopup=\"true\"\n                    onClick={ (event) => this.handleMenuClick(event, ariaOwns) }\n                >\n                    <MoreVert/>\n                </IconButton>\n                {\n                    ariaOwns === this.state.ariaOwns &&\n                    <Menu\n                        id={ ariaOwns }\n                        anchorEl={ this.state.anchorEl }\n                        open={ Boolean(this.state.anchorEl) }\n                        onClose={ () => this.handleMenuClose() }\n                    >\n                        {\n                            !item[this.deletedField] &&\n                            <MenuItem onClick={ () => this.handleMenuDelete(item) }>\n                                <ListItemIcon>\n                                    <DeleteIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary={ strings.table.delete }/>\n                            </MenuItem>\n                        }\n                        {\n                            item[this.deletedField] &&\n                            <MenuItem onClick={ () => this.handleRestore(item) }>\n                                <ListItemIcon>\n                                    <UndoIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary={ strings.table.undo }/>\n                            </MenuItem>\n                        }\n\n                        {\n                            !item.isFree &&\n                            <MenuItem onClick={ () => this.handleUnblock(item) }>\n                                <ListItemIcon>\n                                    <UndoIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Cancel\"/>\n                            </MenuItem>\n                        }\n\n{\n                            item.isFree &&\n                            <MenuItem onClick={ () => this.handleBlock(item) }>\n                                <ListItemIcon>\n                                    <UndoIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Reserve\"/>\n                            </MenuItem>\n                        }\n\n                    </Menu>\n                }\n\n            </TableCell>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers, authReducers })\n{\n    return { menu: menuReducers, auth: authReducers };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(RecepieList)));"]},"metadata":{},"sourceType":"module"}