{"ast":null,"code":"var _jsxFileName = \"/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/pages/user/Register.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../localization\";\nimport Page from \"../../common/Page\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Validators from \"../../constants/ValidatorTypes\";\nimport { register } from '../../services/UserService';\nimport UserRegisterForm from '../../components/forms/admin/user/UserRegisterForm';\n\nclass Register extends Page {\n  constructor(props) {\n    super(props);\n    this.validationList = {\n      email: [{\n        type: Validators.EMAIL\n      }],\n      password: [{\n        type: Validators.REQUIRED\n      }],\n      firstName: [{\n        type: Validators.REQUIRED\n      }],\n      lastName: [{\n        type: Validators.REQUIRED\n      }]\n    };\n    this.state = {\n      data: {},\n      errors: {},\n      redirectUrl: props.location.state ? props.location.state.redirectUrl : '/'\n    };\n    this.props.changeFullScreen(true);\n    this.keyPress = this.keyPress.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.user) {\n      this.props.history.push('/');\n    }\n  }\n\n  keyPress(event) {\n    if (event.key == 'Enter') {\n      this.login();\n    }\n  }\n\n  register() {\n    if (!this.validate()) {\n      return;\n    }\n\n    register(this.state.data).then(response => {\n      if (!response || !response.ok) {\n        return;\n      }\n\n      this.props.history.push('/login');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, strings.login.register), /*#__PURE__*/React.createElement(UserRegisterForm, {\n      onSubmit: () => this.register(),\n      onChange: this.changeData,\n      keyPress: this.keyPress,\n      data: this.state.data,\n      errors: this.state.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen,\n    login: Actions.login\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers,\n  authReducers\n}) {\n  return {\n    menu: menuReducers,\n    auth: authReducers\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));","map":{"version":3,"sources":["/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/pages/user/Register.js"],"names":["React","bindActionCreators","Actions","withRouter","connect","strings","Page","Grid","Paper","Validators","register","UserRegisterForm","Register","constructor","props","validationList","email","type","EMAIL","password","REQUIRED","firstName","lastName","state","data","errors","redirectUrl","location","changeFullScreen","keyPress","bind","componentDidMount","auth","user","history","push","event","key","login","validate","then","response","ok","render","changeData","mapDispatchToProps","dispatch","mapStateToProps","menuReducers","authReducers","menu"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,gBAAP,MAA6B,oDAA7B;;AAGA,MAAMC,QAAN,SAAuBN,IAAvB,CAA4B;AASxBO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAPnBC,cAOmB,GAPF;AACbC,MAAAA,KAAK,EAAE,CAAE;AAACC,QAAAA,IAAI,EAAER,UAAU,CAACS;AAAlB,OAAF,CADM;AAEbC,MAAAA,QAAQ,EAAE,CAAE;AAACF,QAAAA,IAAI,EAAER,UAAU,CAACW;AAAlB,OAAF,CAFG;AAGbC,MAAAA,SAAS,EAAE,CAAE;AAACJ,QAAAA,IAAI,EAAER,UAAU,CAACW;AAAlB,OAAF,CAHE;AAIbE,MAAAA,QAAQ,EAAE,CAAE;AAACL,QAAAA,IAAI,EAAER,UAAU,CAACW;AAAlB,OAAF;AAJG,KAOE;AAGf,SAAKG,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,WAAW,EAAEZ,KAAK,CAACa,QAAN,CAAeJ,KAAf,GAAuBT,KAAK,CAACa,QAAN,CAAeJ,KAAf,CAAqBG,WAA5C,GAA0D;AAH9D,KAAb;AAMA,SAAKZ,KAAL,CAAWc,gBAAX,CAA4B,IAA5B;AAEA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhB,QAAG,KAAKjB,KAAL,CAAWkB,IAAX,CAAgBC,IAAnB,EAAyB;AACrB,WAAKnB,KAAL,CAAWoB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACJ;;AAEDN,EAAAA,QAAQ,CAACO,KAAD,EAAQ;AAEZ,QAAGA,KAAK,CAACC,GAAN,IAAa,OAAhB,EAAyB;AACrB,WAAKC,KAAL;AACH;AACJ;;AAED5B,EAAAA,QAAQ,GAAG;AAEP,QAAG,CAAC,KAAK6B,QAAL,EAAJ,EAAqB;AACjB;AACH;;AAED7B,IAAAA,QAAQ,CAAC,KAAKa,KAAL,CAAWC,IAAZ,CAAR,CAA0BgB,IAA1B,CAA+BC,QAAQ,IAAI;AAEvC,UAAG,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACC,EAA1B,EAA8B;AAC1B;AACH;;AAED,WAAK5B,KAAL,CAAWoB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AAEH,KARD;AASH;;AAEDQ,EAAAA,MAAM,GAAG;AAEL,wBAEI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMtC,OAAO,CAACiC,KAAR,CAAc5B,QAApB,CAFJ,eAII,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAG,MAAM,KAAKA,QAAL,EAAnC;AAAqD,MAAA,QAAQ,EAAG,KAAKkC,UAArE;AACW,MAAA,QAAQ,EAAG,KAAKf,QAD3B;AAEW,MAAA,IAAI,EAAG,KAAKN,KAAL,CAAWC,IAF7B;AAEoC,MAAA,MAAM,EAAG,KAAKD,KAAL,CAAWE,MAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,CAFJ;AAeH;;AAvEuB;;AA0E5B,SAASoB,kBAAT,CAA4BC,QAA5B,EACA;AACI,SAAO7C,kBAAkB,CAAC;AACtB2B,IAAAA,gBAAgB,EAAE1B,OAAO,CAAC0B,gBADJ;AAEtBU,IAAAA,KAAK,EAAEpC,OAAO,CAACoC;AAFO,GAAD,EAGtBQ,QAHsB,CAAzB;AAIH;;AAED,SAASC,eAAT,CAAyB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAzB,EACA;AACI,SAAO;AAAEC,IAAAA,IAAI,EAAEF,YAAR;AAAsBhB,IAAAA,IAAI,EAAEiB;AAA5B,GAAP;AACH;;AAED,eAAe9C,UAAU,CAACC,OAAO,CAAC2C,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjC,QAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react'\r\n\r\nimport {bindActionCreators} from \"redux\";\r\nimport * as Actions from \"../../actions/Actions\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport strings from \"../../localization\";\r\nimport Page from \"../../common/Page\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Validators from \"../../constants/ValidatorTypes\";\r\nimport { register } from '../../services/UserService';\r\nimport UserRegisterForm from '../../components/forms/admin/user/UserRegisterForm';\r\n\r\n\r\nclass Register extends Page {\r\n\r\n    validationList = {\r\n        email: [ {type: Validators.EMAIL } ],\r\n        password: [ {type: Validators.REQUIRED } ],\r\n        firstName: [ {type: Validators.REQUIRED } ],\r\n        lastName: [ {type: Validators.REQUIRED } ]\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {},\r\n            errors: {},\r\n            redirectUrl: props.location.state ? props.location.state.redirectUrl : '/'\r\n        };\r\n\r\n        this.props.changeFullScreen(true);\r\n\r\n        this.keyPress = this.keyPress.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.props.auth.user) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    keyPress(event) {\r\n\r\n        if(event.key == 'Enter') {\r\n            this.login()\r\n        }\r\n    }\r\n\r\n    register() {\r\n\r\n        if(!this.validate()) {\r\n            return;\r\n        }\r\n\r\n        register(this.state.data).then(response => {\r\n\r\n            if(!response || !response.ok) {\r\n                return;\r\n            }\r\n\r\n            this.props.history.push('/login');\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div id='login'>\r\n                <Grid item md={6}>\r\n                    <Paper className='paper'>\r\n\r\n                        <h1>{ strings.login.register }</h1>\r\n\r\n                        <UserRegisterForm onSubmit={ () => this.register() } onChange={ this.changeData }\r\n                                   keyPress={ this.keyPress }\r\n                                   data={ this.state.data } errors={ this.state.errors }/>\r\n                    </Paper>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({\r\n        changeFullScreen: Actions.changeFullScreen,\r\n        login: Actions.login\r\n    }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({ menuReducers, authReducers })\r\n{\r\n    return { menu: menuReducers, auth: authReducers };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));"]},"metadata":{},"sourceType":"module"}