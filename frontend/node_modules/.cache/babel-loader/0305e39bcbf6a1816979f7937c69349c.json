{"ast":null,"code":"var _jsxFileName = \"/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/pages/user/Lock.js\";\nimport React from 'react';\nimport Page from \"../../common/Page\";\nimport Validators from \"../../constants/ValidatorTypes\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../localization\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport LockForm from \"../../components/forms/user/LockForm\";\nimport { login, unlock } from \"../../base/OAuth\";\n\nclass Lock extends Page {\n  constructor(props) {\n    super(props);\n    this.validationList = {\n      password: [{\n        type: Validators.REQUIRED\n      }]\n    };\n    this.props.changeFullScreen(true);\n  }\n\n  unlock() {\n    if (!this.validate()) {\n      return;\n    }\n\n    unlock(this.state.data.email, this.state.data.password).then(response => {\n      if (!response.ok) {\n        this.setError('password', strings.lock.wrongCredentials);\n        return;\n      }\n\n      this.props.history.push({\n        pathname: this.state.redirectUrl\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, strings.lock.login), /*#__PURE__*/React.createElement(LockForm, {\n      onSubmit: () => this.unlock(),\n      onChange: this.changeData,\n      data: this.state.data,\n      errors: this.state.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers,\n  authReducers\n}) {\n  return {\n    menu: menuReducers,\n    auth: authReducers\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Lock));","map":{"version":3,"sources":["/Users/smijatovic/Documents/Projects/projektovanjeSoftvera2020/frontend/src/pages/user/Lock.js"],"names":["React","Page","Validators","bindActionCreators","Actions","withRouter","connect","strings","Paper","Grid","LockForm","login","unlock","Lock","constructor","props","validationList","password","type","REQUIRED","changeFullScreen","validate","state","data","email","then","response","ok","setError","lock","wrongCredentials","history","push","pathname","redirectUrl","render","changeData","errors","mapDispatchToProps","dispatch","mapStateToProps","menuReducers","authReducers","menu","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,mBAA1B;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;;AAEA,MAAMC,IAAN,SAAmBZ,IAAnB,CAAwB;AAMpBa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAJnBC,cAImB,GAJF;AACbC,MAAAA,QAAQ,EAAE,CAAE;AAACC,QAAAA,IAAI,EAAEhB,UAAU,CAACiB;AAAlB,OAAF;AADG,KAIE;AAGf,SAAKJ,KAAL,CAAWK,gBAAX,CAA4B,IAA5B;AACH;;AAEDR,EAAAA,MAAM,GAAG;AAEL,QAAG,CAAC,KAAKS,QAAL,EAAJ,EAAqB;AACjB;AACH;;AAEDT,IAAAA,MAAM,CAAC,KAAKU,KAAL,CAAWC,IAAX,CAAgBC,KAAjB,EAAwB,KAAKF,KAAL,CAAWC,IAAX,CAAgBN,QAAxC,CAAN,CAAwDQ,IAAxD,CAA6DC,QAAQ,IAAI;AAErE,UAAG,CAACA,QAAQ,CAACC,EAAb,EAAiB;AAEb,aAAKC,QAAL,CAAc,UAAd,EAA0BrB,OAAO,CAACsB,IAAR,CAAaC,gBAAvC;AACA;AACH;;AAED,WAAKf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWY;AADD,OAAxB;AAGH,KAXD;AAYH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM5B,OAAO,CAACsB,IAAR,CAAalB,KAAnB,CAFJ,eAII,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAG,MAAM,KAAKC,MAAL,EAA3B;AAA2C,MAAA,QAAQ,EAAG,KAAKwB,UAA3D;AACW,MAAA,IAAI,EAAG,KAAKd,KAAL,CAAWC,IAD7B;AACoC,MAAA,MAAM,EAAG,KAAKD,KAAL,CAAWe,MADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,CADJ;AAaH;;AA/CmB;;AAkDxB,SAASC,kBAAT,CAA4BC,QAA5B,EACA;AACI,SAAOpC,kBAAkB,CAAC;AACtBiB,IAAAA,gBAAgB,EAAEhB,OAAO,CAACgB;AADJ,GAAD,EAEtBmB,QAFsB,CAAzB;AAGH;;AAED,SAASC,eAAT,CAAyB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAzB,EACA;AACI,SAAO;AAAEC,IAAAA,IAAI,EAAEF,YAAR;AAAsBG,IAAAA,IAAI,EAAEF;AAA5B,GAAP;AACH;;AAED,eAAerC,UAAU,CAACC,OAAO,CAACkC,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CzB,IAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport Page from \"../../common/Page\";\nimport Validators from \"../../constants/ValidatorTypes\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport strings from \"../../localization\";\nimport {Paper, Grid} from \"@material-ui/core\";\nimport LockForm from \"../../components/forms/user/LockForm\";\nimport {login, unlock} from \"../../base/OAuth\";\n\nclass Lock extends Page {\n\n    validationList = {\n        password: [ {type: Validators.REQUIRED } ]\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.props.changeFullScreen(true);\n    }\n\n    unlock() {\n\n        if(!this.validate()) {\n            return;\n        }\n\n        unlock(this.state.data.email, this.state.data.password).then(response => {\n\n            if(!response.ok) {\n\n                this.setError('password', strings.lock.wrongCredentials);\n                return;\n            }\n\n            this.props.history.push({\n                pathname: this.state.redirectUrl\n            })\n        });\n    }\n\n    render() {\n\n        return (\n            <div id='lock'>\n                <Grid item md={6}>\n                    <Paper className='paper'>\n\n                        <h1>{ strings.lock.login }</h1>\n\n                        <LockForm onSubmit={ () => this.unlock() } onChange={ this.changeData }\n                                   data={ this.state.data } errors={ this.state.errors }/>\n                    </Paper>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers, authReducers })\n{\n    return { menu: menuReducers, auth: authReducers };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Lock));"]},"metadata":{},"sourceType":"module"}