{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/recepies/AddRecepie.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport Grid from '@material-ui/core/Grid';\nimport { Paper } from \"@material-ui/core\";\nimport strings from \"../../../localization\";\nimport Validators from \"../../../constants/ValidatorTypes\";\nimport FormComponent from \"../../../common/FormComponent\";\nimport UserForm from \"../../../components/forms/admin/user/UserForm\";\nimport { addUser } from \"../../../services/admin/UserAdminService\";\nimport { withSnackbar } from \"notistack\";\nimport AppointmentForm from '../../../components/forms/admin/appointment/AppointmentForm';\nimport { addAppointment } from '../../../services/AppointmentService';\nimport RecepieForm from '../../../components/forms/admin/recepies/RecepieForm';\n\nclass AddRecepie extends FormComponent {\n  constructor(props) {\n    super(props);\n    this.validationList = {\n      patient: [{\n        type: Validators.REQUIRED\n      }],\n      amount: [{\n        type: Validators.REQUIRED\n      }],\n      medicine: [{\n        type: Validators.REQUIRED\n      }]\n    };\n    this.state = {\n      data: props.data ? props.data : {},\n      errors: {}\n    };\n    this.props.changeFullScreen(false);\n    this.submit = this.submit.bind(this);\n  }\n\n  submit() {\n    if (!this.validate()) {\n      return;\n    }\n\n    this.showDrawerLoader();\n    let data = {\n      medicine: this.state.data.medicine,\n      patient: this.state.data.patient,\n      doctor: this.state.data.doctor ? {\n        id: this.state.data.doctor.id\n      } : null\n    };\n    addAppointment(data).then(response => {\n      if (!response.ok) {\n        this.props.onFinish(null);\n        this.props.enqueueSnackbar(\"Error adding recepie\", {\n          variant: 'error'\n        });\n        return;\n      }\n\n      this.props.enqueueSnackbar(\"Recepie added\", {\n        variant: 'success'\n      });\n      this.props.onFinish(response.data.user);\n      this.hideDrawerLoader();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      id: \"page\",\n      item: true,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Add recepie\")), /*#__PURE__*/React.createElement(Paper, {\n      className: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RecepieForm, {\n      patiens: this.props.patiens,\n      medicines: this.props.medicines,\n      onChange: this.changeData,\n      onSubmit: this.submit,\n      data: this.state.data,\n      errors: this.state.errors,\n      onCancel: this.props.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeFullScreen: Actions.changeFullScreen\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  menuReducers,\n  siteDataReducers\n}) {\n  return {\n    menu: menuReducers,\n    siteData: siteDataReducers\n  };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRecepie)));","map":{"version":3,"sources":["/opt/lampp/htdocs/projektovanjeSoftvera2020/frontend/src/pages/admin/recepies/AddRecepie.js"],"names":["React","bindActionCreators","Actions","withRouter","connect","Grid","Paper","strings","Validators","FormComponent","UserForm","addUser","withSnackbar","AppointmentForm","addAppointment","RecepieForm","AddRecepie","constructor","props","validationList","patient","type","REQUIRED","amount","medicine","state","data","errors","changeFullScreen","submit","bind","validate","showDrawerLoader","doctor","id","then","response","ok","onFinish","enqueueSnackbar","variant","user","hideDrawerLoader","render","patiens","medicines","changeData","onCancel","mapDispatchToProps","dispatch","mapStateToProps","menuReducers","siteDataReducers","menu","siteData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../../actions/Actions\";\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport Grid from '@material-ui/core/Grid';\nimport {Paper} from \"@material-ui/core\";\nimport strings from \"../../../localization\";\nimport Validators from \"../../../constants/ValidatorTypes\";\nimport FormComponent from \"../../../common/FormComponent\";\nimport UserForm from \"../../../components/forms/admin/user/UserForm\";\nimport {addUser} from \"../../../services/admin/UserAdminService\";\nimport {withSnackbar} from \"notistack\";\nimport AppointmentForm from '../../../components/forms/admin/appointment/AppointmentForm';\nimport { addAppointment } from '../../../services/AppointmentService';\nimport RecepieForm from '../../../components/forms/admin/recepies/RecepieForm';\n\nclass AddRecepie extends FormComponent {\n\n    validationList = {\n        patient: [ {type: Validators.REQUIRED } ],\n        amount: [ {type: Validators.REQUIRED } ],\n        medicine: [ {type: Validators.REQUIRED } ]\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: props.data ? props.data : {},\n            errors: {}\n        };\n\n        this.props.changeFullScreen(false);\n\n        this.submit = this.submit.bind(this);\n    }\n\n    submit() {\n\n        if(!this.validate()) {\n            return;\n        }\n\n        this.showDrawerLoader();\n\n        let data = {\n            medicine: this.state.data.medicine,\n            patient: this.state.data.patient,\n            doctor:  this.state.data.doctor ? { id: this.state.data.doctor.id} : null\n        }\n\n        addAppointment(data).then(response => {\n\n            if(!response.ok) {\n                this.props.onFinish(null);\n                this.props.enqueueSnackbar(\"Error adding recepie\", { variant: 'error' });\n                return;\n            }\n\n            this.props.enqueueSnackbar(\"Recepie added\", { variant: 'success' });\n            this.props.onFinish(response.data.user);\n\n            this.hideDrawerLoader();\n        });\n    }\n\n    render() {\n\n        return (\n            <Grid id='page' item md={ 12 }>\n\n                <div className='header'>\n                    <h1>Add recepie</h1>\n                </div>\n\n                <Paper className='paper'>\n                    <RecepieForm patiens={ this.props.patiens }\n                    medicines={ this.props.medicines }\n                    onChange={ this.changeData } onSubmit={ this.submit }\n                                data={ this.state.data } errors={ this.state.errors } onCancel={ this.props.onCancel }/>\n                </Paper>\n\n            </Grid>\n\n        );\n    }\n}\n\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        changeFullScreen: Actions.changeFullScreen\n    }, dispatch);\n}\n\nfunction mapStateToProps({ menuReducers, siteDataReducers })\n{\n    return { menu: menuReducers, siteData: siteDataReducers };\n}\n\nexport default withSnackbar(withRouter(connect(mapStateToProps, mapDispatchToProps)(AddRecepie)));"]},"metadata":{},"sourceType":"module"}